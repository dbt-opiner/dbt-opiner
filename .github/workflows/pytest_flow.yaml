name: Pytest

on:
    pull_request:
        branches:
            - main

permissions:
  contents: write
  checks: write
  pull-requests: write

jobs:
    pytest_flow:
        name: |
            Pytest workflow - Python: ${{ matrix.python-version }}
        runs-on: ubuntu-latest
        concurrency:
          group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
          cancel-in-progress: true
        strategy:
            fail-fast: false
            matrix:
                python-version:
                    - '3.10'
                    - '3.11'
                    - '3.12'

        steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-python@v5
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Install Poetry
              uses: snok/install-poetry@v1
              with:
                  virtualenvs-create: true
                  virtualenvs-in-project: true
                  installer-parallel: true

            - name: Install dependencies
              run: poetry install --no-interaction --no-ansi

            - name: Run pytest
              id: pytest
              run: |
                  set -o pipefail
                  poetry run pytest --junitxml=pytest.xml --cov-report=term-missing:skip-covered --cov=dbt_opiner --numprocesses 10 tests/ | tee pytest-coverage.txt
                  if grep -q 'FAILED' pytest-coverage.txt; then
                    failed_tests_output="$(grep -o 'FAILED .*' pytest-coverage.txt)"
                    echo "failed_tests=$failed_tests_output" >> $GITHUB_OUTPUT
                    exit 1
                  fi

            - name: Post PR comment for failed tests
              if: failure()
              uses: mshick/add-pr-comment@v2
              with:
                  message: |
                    :x: Some tests have failed in the `Pytest` workflow:
                    ```
                    ${{ steps.pytest.outputs.failed_tests }}
                    ```

            - name: Pytest coverage comment
              if: always()
              uses: MishaKav/pytest-coverage-comment@main
              with:
                  pytest-coverage-path: ./pytest-coverage.txt
                  title: Coverage Report
                  badge-title: Coverage
                  junitxml-path: ./pytest.xml
